version: '3.7'

services:
  backendapp:
    build:
      context: ../..
      dockerfile: pollgram_back/conf/Dockerfile
    command: gunicorn pollgram_back.wsgi:application --bind 0.0.0.0:8000
    deploy:
      replicas: 3
    volumes:
      - static_volume:/code/static/
      - media_volume:/code/media/
    expose:
      - 8000
    environment:
      - DJANGO_SECRET_KEY
      - DJANGO_HOST
      - DJANGO_DEBUG
      - DJANGO_SUPERUSER_USERNAME
      - DJANGO_SUPERUSER_PASSWORD
      - DJANGO_SUPERUSER_EMAIL
      - DJANGO_RUN_TEST
      - SITE_DOMAIN_NAME
      - SITE_DISPLAY_NAME
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - EMAIL_HOST
      - EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD
      - EMAIL_PORT
      - EMAIL_USE_TLS
      - DEFAULT_FROM_EMAIL
      - ENABLE_BROWSABLE_API
      - DJANGO_STATIC_URL
      - KAFKA_SERVER
    links:
      - postgres-db
  postgres-db:
    image: postgres:12.0-alpine
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "${POSTGRES_EXPOSE_ON_PORT}:5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - PGPASSWORD=${POSTGRES_PASSWORD}
  nginx:
    build: ./nginx
    ports:
      - "${DEPLOY_PORT}:80"
    volumes:
      - static_volume:/backend/static/
      - media_volume:/backend/media/
      - frontend_volume:/frontend/
    environment:
      - DEPLOY_PORT
      - DJANGO_STATIC_URL
    depends_on:
      - backendapp

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    expose:
      - 29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_volume:
    driver: local
    driver_opts: 
      o: bind
      type: none
      device: "~/${FRONTEND_DIR}/build/"
